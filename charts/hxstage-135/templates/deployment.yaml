apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "hyperflexsizer.fullname" . }}
  labels:
    snappyflow/compname: hxstage
    snappyflow/appname: hxsizer-stage
    app: {{ template "hyperflexsizer.name" . }}
    chart: {{ template "hyperflexsizer.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "hyperflexsizer.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        snappyflow/compname: hxstage
        snappyflow/appname: hxsizer-stage
        app: {{ template "hyperflexsizer.name" . }}
        release: {{ .Release.Name }}
        service: apache
    spec:
      initContainers:
      - name: wait-for-db
        image: mysql:5.7.14
        command:
        - "sh"
        - "-c"
        - "until mysql -h$DB_HOST -u$DB_USER -p$DB_PASSWORD -e'quit' --connect-timeout=2; do sleep 2; done && mkdir -p /var/log/apache2 && chmod 777 /var/log/apache2"
        env:
          - name: DB_HOST
            value: "{{ template "mysql.fullname" . }}"
          - name: DB_NAME
            value: "{{ .Values.mysql.mysqlDatabase }}"
          - name: DB_USER
            value: "{{ .Values.mysql.mysqlUser }}"
          - name: DB_PASSWORD
            value: "{{ .Values.mysql.mysqlPassword }}"
        volumeMounts:
          - name: varlog
            mountPath: /var/log
      containers:
{{- if .Values.apache_exporter.enabled }}
        - name: apache-exporter
        {{- if .Values.image_registry }}
          image: "{{ .Values.image_registry }}/{{ .Values.apache_exporter.image }}:{{ .Values.apache_exporter.imageTag }}"
        {{ else }}
          image: "{{ .Values.apache_exporter.image }}:{{ .Values.apache_exporter.imageTag }}"
        {{ end }}
          imagePullPolicy: {{ .Values.apache_exporter.imagePullPolicy | quote }}
          ports:
          - name: apache-exporter
            containerPort: 9117
          livenessProbe:
            httpGet:
              path: /metrics
              port: apache-exporter
            initialDelaySeconds: 30
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /metrics
              port: apache-exporter
            initialDelaySeconds: 15
            timeoutSeconds: 1
{{- end }}
{{- if .Values.logger.enabled }}
        - name: {{ template "hyperflexsizer.fullname" . }}-logger
          image:  "{{ .Values.logger.image }}:{{ .Values.logger.imageTag }}"
          imagePullPolicy: {{ .Values.logger.imagePullPolicy | quote }}
          env:
          - name: FLUENTD_ARGS
            value: --no-supervisor -q
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: FLUENTD_FORWARD_HOST
            value: "{{ .Values.logger.fluentd_server_host }}"
          - name: FLUENTD_FORWARD_PORT
            value: "{{ .Values.logger.fluentd_server_port }}"
          - name: DEEPINSIGHT_APPLICATION_NAME
            value: {{ .Release.Name }}
          resources:
  {{ toYaml .Values.resources | indent 10 }}
          volumeMounts:
          - name: libsystemddir
            mountPath: /host/lib
            readOnly: true
          - name: varlog
            mountPath: /var/log
          - name: {{ template "hyperflexsizer.fullname" . }}-logger-conf
            mountPath: /etc/fluent/config.d
{{- end }}
        - name: {{ .Chart.Name }}
        {{- if .Values.image_registry }}
          image: "{{ .Values.image_registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        {{ else }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        {{ end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: DB_HOST
              value: "{{ template "mysql.fullname" . }}"
            - name: DB_NAME
              value: "{{ .Values.mysql.mysqlDatabase }}"
            - name: DB_USER
              value: "{{ .Values.mysql.mysqlUser }}"
            - name: DB_PASSWORD
              value: "{{ .Values.mysql.mysqlPassword }}"
            - name: DB_PORT
              value: "3306"
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            httpGet:
                path: /
                port: http
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
            successThreshold: 1
          volumeMounts:
          - mountPath: /var/log
            name: varlog
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
      volumes:
      - name: varlog
        emptyDir: {}
      - name: libsystemddir
        hostPath:
          path: /usr/lib64
      - name: {{ template "hyperflexsizer.fullname" . }}-logger-conf
        configMap:
          name: {{ template "hyperflexsizer.fullname" . }}-logger-conf


